{
    "openapi": "3.0.0",
    "paths": {
        "/api/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "List all clients",
                "description": "Display a listing of the resource.",
                "operationId": "0b636ca85e574ff3010b44d6c621c537",
                "responses": {
                    "200": {
                        "description": "List all clients"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "description": "Store a newly created resource in storage.",
                "operationId": "9fdaf88d446f92c97501f370f36678cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João da Silva"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "joao@email.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "11999999999"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Show the client by ID",
                "description": "Display the specified resource.",
                "operationId": "b14ec5af90558633e3b1f226e0249d4f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client retrieved successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update the client",
                "description": "Update client by ID. You can send only the fields you want to update.",
                "operationId": "9ffd4acb0368eb6068e75cd7dd5d43ff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João Atualizado"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "joao.atualizado@email.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "12987654321"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete the client",
                "description": "Deletes a client by their ID.",
                "operationId": "527e3694096ac0e9d71511de8b647c8d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Client deleted successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "List all orders",
                "description": "Display a listing of the resource.",
                "operationId": "06c97026033cb815011bbbf81fefb828",
                "responses": {
                    "200": {
                        "description": "List all orders"
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Store a newly created resource in storage.",
                "operationId": "d470cd500f8c07d41b81bc8be9c2fca1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Show the order by ID",
                "description": "Display the specified resource.",
                "operationId": "1f765bbdc4c98369ee76760efa0e8f78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update the order",
                "description": "Update order by ID. You can send only the fields you want to update.",
                "operationId": "bca07eb391513c45e14fe291973b5c1e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete the order",
                "description": "Deletes an order by their ID.",
                "operationId": "4081ab17c11bdf4f90613c7b5a88c19d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order deleted successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List all products",
                "description": "Display a listing of the resource.",
                "operationId": "6d8ae74dcafe19c4813904d4ea9e4c57",
                "responses": {
                    "200": {
                        "description": "List all products"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Store a newly created resource in storage.",
                "operationId": "9f0b814cd8d69075ed70d4cc79c9f417",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Produto A"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Show the product by ID",
                "description": "Display the specified resource.",
                "operationId": "f6410f1810b0a90ba3d72d5b8250a27d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update the product",
                "description": "Update product by ID. You can send only the fields you want to update.",
                "operationId": "14b6ff17cc6ce7298a06271a8bc89539",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Produto Atualizado"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 89.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete the product",
                "description": "Deletes a product by their ID.",
                "operationId": "3dda9543e42196cc1ff7b18d2c9f9357",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/products_stocks": {
            "get": {
                "tags": [
                    "ProductsStocks"
                ],
                "summary": "List all products stocks",
                "description": "Display a listing of the resource.",
                "operationId": "138b3ec7502d8b788f3eaccd781b0e7e",
                "responses": {
                    "200": {
                        "description": "List all products stocks"
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductsStocks"
                ],
                "summary": "Create a new product stock",
                "description": "Store a newly created resource in storage.",
                "operationId": "ac628059e6829a6c978117d89f1d6b4d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product stock created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products_stocks/{id}": {
            "get": {
                "tags": [
                    "ProductsStocks"
                ],
                "summary": "Show the product stock by ID",
                "description": "Display the specified resource.",
                "operationId": "686af5d0ef3301ecdf1b6bcbbc61b77d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product stock to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product stock retrieved successfully"
                    },
                    "404": {
                        "description": "Product stock not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ProductsStocks"
                ],
                "summary": "Update the product stock",
                "description": "Update product stock by ID. You can send only the fields you want to update.",
                "operationId": "92de5d21873005745cdfefd260778541",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product stock to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product stock updated successfully"
                    },
                    "404": {
                        "description": "Product stock not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductsStocks"
                ],
                "summary": "Delete the product stock",
                "description": "Deletes a product stock by their ID.",
                "operationId": "1ff5cbc0745ec1fa5062fd2682d59e09",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product stock to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product stock deleted successfully"
                    },
                    "404": {
                        "description": "Product stock not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Clients",
            "description": "Clients"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "ProductsStocks",
            "description": "ProductsStocks"
        }
    ]
}